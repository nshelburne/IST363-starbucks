{"ast":null,"code":"const API_URL = process.env.WORDPRESS_API_URL;\n\nasync function fetchAPI(query, {\n  variables\n} = {}) {\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  const res = await fetch(API_URL, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify({\n      query,\n      variables\n    })\n  });\n  const json = await res.json();\n\n  if (json.errors) {\n    console.error(json.errors);\n    throw new Error('Failed to fetch API');\n  }\n\n  return json.data;\n}\n\nexport async function getAllMenuItems() {\n  const data = await fetchAPI(`\n        query MyQuery {\n            items {\n                edges {\n                    node {\n                        id\n                        title\n                        slug\n                        featuredImage {\n                            node {\n                            altText\n                            mediaDetails {\n                                height\n                                width\n                            }\n                            sourceUrl\n                            }\n                        }\n                    }\n                }\n            }\n        }      \n\t`);\n  return data === null || data === void 0 ? void 0 : data.items;\n}\nexport async function getAllMenuItemSlugs() {\n  const data = await fetchAPI(`\n        query MyQuery {\n            items {\n                edges {\n                    node {\n                        id\n                        slug\n                    }\n                }\n            }\n        }      \n\t`);\n  return data === null || data === void 0 ? void 0 : data.items;\n}\nexport async function getMenuItemBySlug(id) {\n  const data = await fetchAPI(`\n        query MyQuery($id: ID!) {\n            item(id: $id, idType: SLUG) {\n            id\n            title\n            content\n            featuredImage {\n                node {\n                    altText\n                    sourceUrl\n                    mediaDetails {\n                            height\n                            width\n                        }\n                    }\n                }\n            }\n        }`, {\n    variables: {\n      \"id\": id\n    }\n  });\n  return data === null || data === void 0 ? void 0 : data.item;\n}\nexport async function getMenuTypesAndMenuItems() {\n  const data = await fetchAPI(`\n    query MyQuery {\n        menuTypes {\n          edges {\n            node {\n              id\n              name\n              items {\n                edges {\n                  node {\n                    id\n                    title\n                    slug\n                    featuredImage {\n                      node {\n                        altText\n                        sourceUrl\n                        mediaDetails {\n                          height\n                          width\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      `);\n  return data === null || data === void 0 ? void 0 : data.menuTypes;\n}\nexport async function getLocationItems() {\n  const data = await fetchAPI(`\n  query MyQuery {\n    locations {\n      edges {\n        node {\n          content\n          slug\n          title\n          id\n          featuredImage {\n            node {\n              altText\n              sourceUrl\n              mediaDetails {\n                height\n                width\n              }\n            }\n          }\n        }\n      }\n    }\n  }  \n  `);\n  return data === null || data === void 0 ? void 0 : data.locations;\n} // export async function getLocationItemBySlug (id) {\n//   const data = await fetchAPI(`\n//   query MyQuery($id: ID!) {\n//     location(id: $id, idType: SLUG) {\n//       id\n//       title\n//       content\n//       featuredImage {\n//         node {\n//           altText\n//           mediaDetails {\n//             height\n//             width\n//           }\n//           sourceUrl\n//         }\n//       }\n//       menuTypes {\n//             edges {\n//               node {\n//                 id\n//                 name\n//                 items {\n//                   edges {\n//                     node {\n//                       id\n//                       title\n//                       slug\n//                       featuredImage {\n//                         node {\n//                           altText\n//                           sourceUrl\n//                           mediaDetails {\n//                             height\n//                             width\n//                           }\n//                         }\n//                       }\n//                     }\n//                   }\n//                 }\n//               }\n//             }\n//           }\n//     }\n//   }\n//   `, {\n//     variables: { \n//         \"id\" : id,\n//     }\n//   })\n//   return data?.location\n// }\n\nexport async function getPeopleList() {\n  const data = await fetchAPI(`\n  query MyQuery {\n    person {\n      edges {\n        node {\n          id\n          slug\n          title\n          featuredImage {\n            node {\n              altText\n              sourceUrl\n              mediaDetails {\n                height\n                width\n              }\n            }\n          }\n        }\n      }\n    }\n  }  \n  `);\n  return data === null || data === void 0 ? void 0 : data.person;\n}\nexport async function getPeopleListBySlug(id) {\n  const data = await fetchAPI(`\n  query MyQuery($id: ID!) {\n    people(id: $id, idType: SLUG) {\n      content\n      id\n      slug\n      title\n      featuredImage {\n        node {\n          altText\n          sourceUrl\n          mediaDetails {\n            height\n            width\n          }\n        }\n      }\n    }\n  }`, {\n    variables: {\n      \"id\": id\n    }\n  });\n  return data === null || data === void 0 ? void 0 : data.people;\n}","map":{"version":3,"sources":["C:/Users/nsnad/Desktop/ist363-nextjs/lib/api.js"],"names":["API_URL","process","env","WORDPRESS_API_URL","fetchAPI","query","variables","headers","res","fetch","method","body","JSON","stringify","json","errors","console","error","Error","data","getAllMenuItems","items","getAllMenuItemSlugs","getMenuItemBySlug","id","item","getMenuTypesAndMenuItems","menuTypes","getLocationItems","locations","getPeopleList","person","getPeopleListBySlug","people"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;;AAEA,eAAeC,QAAf,CAAwBC,KAAxB,EAA+B;AAAEC,EAAAA;AAAF,IAAgB,EAA/C,EAAmD;AAClD,QAAMC,OAAO,GAAG;AAAE,oBAAgB;AAAlB,GAAhB;AAGA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAACT,OAAD,EAAU;AAChCU,IAAAA,MAAM,EAAE,MADwB;AAEhCH,IAAAA,OAFgC;AAGhCI,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBR,MAAAA,KADoB;AAEpBC,MAAAA;AAFoB,KAAf;AAH0B,GAAV,CAAvB;AASA,QAAMQ,IAAI,GAAG,MAAMN,GAAG,CAACM,IAAJ,EAAnB;;AACA,MAAIA,IAAI,CAACC,MAAT,EAAiB;AAChBC,IAAAA,OAAO,CAACC,KAAR,CAAcH,IAAI,CAACC,MAAnB;AACA,UAAM,IAAIG,KAAJ,CAAU,qBAAV,CAAN;AACA;;AACD,SAAOJ,IAAI,CAACK,IAAZ;AACA;;AAED,OAAO,eAAeC,eAAf,GAAiC;AACvC,QAAMD,IAAI,GAAG,MAAMf,QAAQ,CAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAtB4B,CAA3B;AAuBA,SAAOe,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEE,KAAb;AAEA;AAED,OAAO,eAAeC,mBAAf,GAAqC;AACxC,QAAMH,IAAI,GAAG,MAAMf,QAAQ,CAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAX+B,CAA3B;AAYH,SAAOe,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEE,KAAb;AACA;AAED,OAAO,eAAeE,iBAAf,CAAkCC,EAAlC,EAAsC;AACzC,QAAML,IAAI,GAAG,MAAMf,QAAQ,CAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAjB+B,EAiBnB;AACAE,IAAAA,SAAS,EAAE;AACP,YAAOkB;AADA;AADX,GAjBmB,CAA3B;AAuBH,SAAOL,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEM,IAAb;AACA;AAED,OAAO,eAAeC,wBAAf,GAA0C;AAC7C,QAAMP,IAAI,GAAG,MAAMf,QAAQ,CAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OA9B+B,CAA3B;AA+BA,SAAOe,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEQ,SAAb;AACH;AAED,OAAO,eAAeC,gBAAf,GAAiC;AACtC,QAAMT,IAAI,GAAG,MAAMf,QAAQ,CAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAvB6B,CAA3B;AAwBA,SAAOe,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEU,SAAb;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,eAAeC,aAAf,GAA8B;AACnC,QAAMX,IAAI,GAAG,MAAMf,QAAQ,CAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAtB6B,CAA3B;AAuBA,SAAOe,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEY,MAAb;AACD;AAED,OAAO,eAAeC,mBAAf,CAAmCR,EAAnC,EAAuC;AAC5C,QAAML,IAAI,GAAG,MAAMf,QAAQ,CAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAlB6B,EAmBzB;AACAE,IAAAA,SAAS,EAAE;AACT,YAAMkB;AADG;AADX,GAnByB,CAA3B;AAwBA,SAAOL,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEc,MAAb;AACD","sourcesContent":["const API_URL = process.env.WORDPRESS_API_URL\r\n\r\nasync function fetchAPI(query, { variables } = {}) {\r\n\tconst headers = { 'Content-Type': 'application/json' }\r\n\r\n\r\n\tconst res = await fetch(API_URL, {\r\n\t\tmethod: 'POST',\r\n\t\theaders,\r\n\t\tbody: JSON.stringify({\r\n\t\t\tquery,\r\n\t\t\tvariables,\r\n\t\t}),\r\n\t})\r\n\r\n\tconst json = await res.json()\r\n\tif (json.errors) {\r\n\t\tconsole.error(json.errors)\r\n\t\tthrow new Error('Failed to fetch API')\r\n\t}\r\n\treturn json.data\r\n}\r\n\r\nexport async function getAllMenuItems() {\r\n\tconst data = await fetchAPI(`\r\n        query MyQuery {\r\n            items {\r\n                edges {\r\n                    node {\r\n                        id\r\n                        title\r\n                        slug\r\n                        featuredImage {\r\n                            node {\r\n                            altText\r\n                            mediaDetails {\r\n                                height\r\n                                width\r\n                            }\r\n                            sourceUrl\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }      \r\n\t`)\r\n\treturn data?.items\r\n\r\n}\r\n\r\nexport async function getAllMenuItemSlugs() {\r\n    const data = await fetchAPI(`\r\n        query MyQuery {\r\n            items {\r\n                edges {\r\n                    node {\r\n                        id\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        }      \r\n\t`)\r\n\treturn data?.items\r\n}\r\n\r\nexport async function getMenuItemBySlug (id) {\r\n    const data = await fetchAPI(`\r\n        query MyQuery($id: ID!) {\r\n            item(id: $id, idType: SLUG) {\r\n            id\r\n            title\r\n            content\r\n            featuredImage {\r\n                node {\r\n                    altText\r\n                    sourceUrl\r\n                    mediaDetails {\r\n                            height\r\n                            width\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }`, {\r\n            variables: { \r\n                \"id\" : id,\r\n            }\r\n        }\r\n        )\r\n\treturn data?.item\r\n}\r\n\r\nexport async function getMenuTypesAndMenuItems() {\r\n    const data = await fetchAPI(`\r\n    query MyQuery {\r\n        menuTypes {\r\n          edges {\r\n            node {\r\n              id\r\n              name\r\n              items {\r\n                edges {\r\n                  node {\r\n                    id\r\n                    title\r\n                    slug\r\n                    featuredImage {\r\n                      node {\r\n                        altText\r\n                        sourceUrl\r\n                        mediaDetails {\r\n                          height\r\n                          width\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      `)\r\n    return data?.menuTypes\r\n}\r\n\r\nexport async function getLocationItems(){\r\n  const data = await fetchAPI(`\r\n  query MyQuery {\r\n    locations {\r\n      edges {\r\n        node {\r\n          content\r\n          slug\r\n          title\r\n          id\r\n          featuredImage {\r\n            node {\r\n              altText\r\n              sourceUrl\r\n              mediaDetails {\r\n                height\r\n                width\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }  \r\n  `)\r\n  return data?.locations\r\n}\r\n\r\n// export async function getLocationItemBySlug (id) {\r\n//   const data = await fetchAPI(`\r\n//   query MyQuery($id: ID!) {\r\n//     location(id: $id, idType: SLUG) {\r\n//       id\r\n//       title\r\n//       content\r\n//       featuredImage {\r\n//         node {\r\n//           altText\r\n//           mediaDetails {\r\n//             height\r\n//             width\r\n//           }\r\n//           sourceUrl\r\n//         }\r\n//       }\r\n//       menuTypes {\r\n//             edges {\r\n//               node {\r\n//                 id\r\n//                 name\r\n//                 items {\r\n//                   edges {\r\n//                     node {\r\n//                       id\r\n//                       title\r\n//                       slug\r\n//                       featuredImage {\r\n//                         node {\r\n//                           altText\r\n//                           sourceUrl\r\n//                           mediaDetails {\r\n//                             height\r\n//                             width\r\n//                           }\r\n//                         }\r\n//                       }\r\n//                     }\r\n//                   }\r\n//                 }\r\n//               }\r\n//             }\r\n//           }\r\n//     }\r\n//   }\r\n  \r\n//   `, {\r\n//     variables: { \r\n//         \"id\" : id,\r\n//     }\r\n//   })\r\n//   return data?.location\r\n// }\r\n\r\nexport async function getPeopleList(){\r\n  const data = await fetchAPI(`\r\n  query MyQuery {\r\n    person {\r\n      edges {\r\n        node {\r\n          id\r\n          slug\r\n          title\r\n          featuredImage {\r\n            node {\r\n              altText\r\n              sourceUrl\r\n              mediaDetails {\r\n                height\r\n                width\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }  \r\n  `)\r\n  return data?.person\r\n}\r\n\r\nexport async function getPeopleListBySlug(id) {\r\n  const data = await fetchAPI(`\r\n  query MyQuery($id: ID!) {\r\n    people(id: $id, idType: SLUG) {\r\n      content\r\n      id\r\n      slug\r\n      title\r\n      featuredImage {\r\n        node {\r\n          altText\r\n          sourceUrl\r\n          mediaDetails {\r\n            height\r\n            width\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }`\r\n  , {\r\n    variables: {\r\n      \"id\": id,\r\n    }\r\n  })\r\n  return data?.people;\r\n}"]},"metadata":{},"sourceType":"module"}