{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nsnad\\\\Desktop\\\\ist363-nextjs\\\\components\\\\header.js\",\n    _s = $RefreshSig$();\n\nimport styles from './header.module.scss';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport ButtonUI from './buttonui';\nimport NavOverlay from './NavOverlay';\nimport { useState } from 'react';\nexport default function Header() {\n  _s();\n\n  var _useState = useState(false),\n      isMenuVisable = _useState[0],\n      setIsMenuVisable = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: styles.header,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/images/starbucks-logo.svg\",\n          width: 100,\n          height: 100,\n          alt: \"Starbucks Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonUI, {\n      icon: \"menu\",\n      clickHandler: function clickHandler() {\n        setIsMenuVisable(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), isMenuVisable && /*#__PURE__*/_jsxDEV(NavOverlay, {\n      closeClickHandler: function closeClickHandler() {\n        setIsMenuVisable(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"sAAv/wh7jgZcKG/0rzY/FTiiC0A=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/nsnad/Desktop/ist363-nextjs/components/header.js"],"names":["styles","Image","Link","ButtonUI","NavOverlay","useState","Header","isMenuVisable","setIsMenuVisable","header"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAAA,kBAEaD,QAAQ,CAAC,KAAD,CAFrB;AAAA,MAEtBE,aAFsB;AAAA,MAEPC,gBAFO;;AAI7B,sBACI;AAAQ,IAAA,SAAS,EAAER,MAAM,CAACS,MAA1B;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA,6BACI;AAAA,+BACI,QAAC,KAAD;AACI,UAAA,GAAG,EAAC,4BADR;AAEI,UAAA,KAAK,EAAE,GAFX;AAGI,UAAA,MAAM,EAAE,GAHZ;AAII,UAAA,GAAG,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,QAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,YAAY,EAAI,wBAAM;AAACD,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAAuB;AAFlD;AAAA;AAAA;AAAA;AAAA,YAXJ,EAgBQD,aAAa,iBAAI,QAAC,UAAD;AAAY,MAAA,iBAAiB,EAAE,6BAAM;AAACC,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AAAwB;AAA9D;AAAA;AAAA;AAAA;AAAA,YAhBzB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GAzBuBF,M;;KAAAA,M","sourcesContent":["import styles from './header.module.scss'\r\nimport Image from 'next/image'\r\nimport Link from 'next/link'\r\nimport ButtonUI from './buttonui'\r\nimport NavOverlay from './NavOverlay'\r\nimport { useState } from 'react'\r\n\r\nexport default function Header() {\r\n\r\n    const [isMenuVisable, setIsMenuVisable] = useState(false);\r\n\r\n    return (\r\n        <header className={styles.header}>\r\n            <Link href=\"/\">\r\n                <a>\r\n                    <Image \r\n                        src='/images/starbucks-logo.svg'\r\n                        width={100}\r\n                        height={100}\r\n                        alt='Starbucks Logo'\r\n                    />\r\n                </a>\r\n            </Link>\r\n            <ButtonUI \r\n                icon=\"menu\" \r\n                clickHandler = {() => {setIsMenuVisable(true)}}\r\n            />\r\n            {\r\n                isMenuVisable && <NavOverlay closeClickHandler={() => {setIsMenuVisable(false)}} />\r\n            }\r\n        </header>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}